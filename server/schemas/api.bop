import "common.bop"

enum Stage {
  GamerSelect = 1;
  AudienceLobby = 2; // at this point wait 20 secs
  Drawing = 3;
  Voting = 4;
  Judging = 5;
  Results = 6;
}

enum ServerMessageType {
  Ping = 1;
  GameState = 2; // -- see GameState struct 
  ClientTypeDTO = 3; // sends client type
  ClientJoined = 4; // also client type denotes diff event
  DrawUpdate = 5; // for the audience
  FinishStroke = 6; // -- storing coords
  VoteUpdate = 7; // -- for counting votes
  NoGameState = 8;
  Clear = 9;

  Restart = 28;
  // STAGES
  // AudienceLobbySTG = 29; 
  // DrawingSTG = 30; // timer on client -- timer on client is single source of truth (server authoritative)
  // VotingSTG = 31; 
  // JudgingSTG = 32; 
  ResultsSTG = 33;
}

struct DrawUpdate {
  Coord currentPoint;
  Coord prevPoint;
  GamerChoice gamer;
}

struct GameState {
  guid id;
  Stage stage;
  uint64 stage_finish_time;
  map[uint32, ClientType] clients;
  Drawing[] drawings;
  Prompt prompt;
}
struct ClientJoined {
  ClientType newClient;
}

struct NewSTG {
  guid id;
}

struct ResultsSTG { // keep in global state
  guid id;
  GamerChoice[] votes;
  uint32[] gamerAKVals;
  uint32[] gamerBKVals;

}

struct Prompt
{
  string name;
  uint32 class;
}

struct Drawing {
  Coord[][] strokes;
}

struct Clear {
  GamerChoice gamer;
}

struct STG_Results {
  guid id;
}

struct Ping {
  string msg;
  bool test;
}

struct ClientTypeDTO {
  uint8 gamerId; 
  uint32 id;
  ClientType ctype;
}

struct FinishStroke {
  GamerChoice gamer;
}